{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport default function PokemonTypes() {\n  return _PokemonTypes.apply(this, arguments);\n}\n_c2 = PokemonTypes;\n\nfunction _PokemonTypes() {\n  _PokemonTypes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              axios.get(\"https://pokeapi.co/api/v2/type/{id or name}/\").then(function (res) {\n                return resolve(res.data);\n              })[\"catch\"](function (error) {\n                return reject(error);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _PokemonTypes.apply(this, arguments);\n}\n\n_c = PokemonTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PokemonTypes\");\n$RefreshReg$(_c2, \"PokemonTypes\");","map":{"version":3,"sources":["C:/Github/Pokedex/Utils/GetPokemonData.js"],"names":["axios","PokemonTypes","Promise","resolve","reject","get","then","res","data","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,wBAA8BC,YAA9B;AAAA;AAAA;MAA8BA,Y;;;2EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJ,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnCJ,cAAAA,KAAK,CACHK,GADF,CACM,8CADN,EAEEC,IAFF,CAEO,UAACC,GAAD;AAAA,uBAASJ,OAAO,CAACI,GAAG,CAACC,IAAL,CAAhB;AAAA,eAFP,WAGQ,UAACC,KAAD;AAAA,uBAAWL,MAAM,CAACK,KAAD,CAAjB;AAAA,eAHR;AAIH,aALM,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeR,Y","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default async function PokemonTypes(){\r\n    return new Promise((resolve, reject) =>{\r\n        axios\r\n         .get(\"https://pokeapi.co/api/v2/type/{id or name}/\")\r\n         .then((res) => resolve(res.data))\r\n         .catch((error) => reject(error));\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}